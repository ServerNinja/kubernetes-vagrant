---
######## Begin hypervisor configuration ########
# By default, the Vagrantfile will use virtualbox for a provider
vagrant:
  provider: virtualbox # libvirt or virtualbox
  #box: "generic/ubuntu2004"
  box: "bento/ubuntu-24.04"

  # CPU Type - defaults to "intel"
  cpu: "Intel Core i7-6700K"
### Uncomment for libvirt specific settings ###
#libvirt:
#  bridge_interface: "br0" # <<- Defaults to "br0" when not defined

######## Begin Node Definition ########
### Define the nodes by their node name, IP, and Role (master or worker).
# Additional options shown below...
# NOTE: Currently only supports one master node
node_info:
  k8s-master-1:
      ip: 192.168.1.30
      #mac: 08002799F0D4 # <=== Optional Mac Address
      role: master
      memory: 2048       # <=== Default to 1024 if not defined
      cpus: 1            # <=== Default to 1 if not defined
  k8s-worker-1:
      ip: 192.168.1.31
      role: worker
      memory: 4096
#  k8s-worker-2:
#      ip: 192.168.1.32
#      role: worker
#      memory: 4096

######## Begin Packager Proxy ########
# Uncomment to add an apt proxy url configuration to /etc/apt/apt.conf.d
# apt-proxy-url: http://192.168.2.45:3142

######## End Packager Proxy ########

######## End Node Definition ########

######## Begin Networking Settings ########
# NOTE: This project uses bridge networking, which allows your VMs to be fully accessible
#       on your local network from your computer
#
### Define the order of named interfaces you wish to have 
# VirtualBox try to assign to the bridge (only used for virtualbox provider)
net_bridge_order:
  - "wlo1"

### Define the preferred default router you wish to use for yor VMs
default_router: 192.168.1.1

### Define nameservers
nameservers: "[ 8.8.8.8, 8.8.4.4 ]"
######## End Networking Settings ########

######## Begin Kubernetes Settings #######
kubernetes:
  version: 1.31 # Refer to apt list -a kubelet for available version list
  #cluster_name: kubernetes-vagrant

  containerEngine: containerd # <== Use "containerd" (default) or "docker"

  ## SDN settings
  #kube_podnet_cidr: 172.16.0.0/16
  #kube_service_cidr: 10.96.0.0/12

  ## Networking
  kube_cni: cilium  # <== Use "calico" (default) or "cilium"

  ## Cilium Specific Settings
  # Limit egress masquerading to interface selector
  cilium:
    egressMasqueradeInterfaces: eth1 
######## End Kubernetes Settings #######

######## Optional Helm Charts to be installed by ansible #######
helm:
  kubed: true
  prometheus: false
  loki: false
  promtail: false

  # Ingress Controller
  ingress_nginx: false

  # Not working yet
  kubernetes_dashboard: false
